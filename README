Contents

    1. Introduction
    2. Dependencies
    3. Installation
    4. License
    5. Credits
    6. Contact

-------------------------------------------------------------------------------
1. Introduction

SciTools is a Python package containing lots of useful tools for
scientific computing in Python. The package is built on top of other
widely used packages such as NumPy, SciPy, ScientificPython, Gnuplot,
etc. 

-------------------------------------------------------------------------------
2. Dependencies

SciTools only requirements are Python (see http://python.org)
and Numerical Python (see http://numpy.org). In the past, SciTools
worked transparently with NumPy, Numeric, and Numarray, through its
numpytools module. Although this module still works, we recommend
users to use NumPy only.

-------------------------------------------------------------------------------
3. Installation

There are several different ways of installing SciTools:

 - Normal install ([, ... ] means optional)
  
     python setup.py install [,--prefix=$PREFIX]

   This install makes SciTools use Gnuplot as plotting engine, which is
   appropriate if you have the Gnuplot plotting program and the Gnuplot.py
   Python package installed. If not, we recommend to have Matplotlib
   as plotting engine. Then you write

     python setup.py install --easyviz_backend matplotlib [,--prefix=$PREFIX]

   This install requires you to have Matplotlib installed, but that is as
   easy as installing SciTools (just a python setup.py install).

   The default plotting engine is specified in the file scitools.cfg in the
   scitools package directory, and the --easyviz_backend option leads to
   an automatic edit of the "backend" line in that configuration file.
   You can equally well edit the scitools.cfg file manually (look for the
   [easyviz] section and the "backend =" line).

 - Setuptools using eggs

   First build the egg with the following command	
    
     python setupegg.py [, egg_info --tag-svn-revision ] bdist_egg

   The --easyviz_backend option can be used, as described above, to
   change the default plotting engine from Gnuplot to another program.

   Then install the created egg using easy_install

     easy_install [, --prefix=$PREFIX] dist/Scitools-0.1-py2.4.egg 

 - Manual

   Put the lib subdirectory in a directory contained in PYTHONPATH,
   and the bin subdirectory in a directory contained in PATH.
   (This gives access to the directories for scitools, easyviz, etc.)
   Edit the scitools.cfg file to set the desired default plotting engine
   (look for the "backend =" line in the [easyviz] section).

 - Debian/Ubuntu packages

   If you have Debian or a Debian based platform like Ubuntu, there is a 
   repository with SciTools available at http://packages.simula.no (see
   http://packages.simula.no/README for how to enable this
   repository). With this repository enabled you should be able to 
   install SciTools simply by typing

     sudo apt-get install python-scitools

 - Extended

   Run build_scitools++.py. This makes a new directory build/scitools++
   that you can move to any convenient place. scitools++ contains
   scitools plus some standard Python modules like Gnuplot, IPython,
   epydoc, etc. Put scitools++/lib in PYTHONPATH and scitools++/bin in
   PATH. Or you may run scitools++/setup.py to install scitools++ in the
   official installation directories on your system. 

-------------------------------------------------------------------------------
4. License

SciTools is licensed under the new BSD license, see the LICENSE file.

Lumpy.py and Gui.py are licensed under GPL, however, permission is
granted by Allen Downey to include these under a BSD license.

-------------------------------------------------------------------------------
5. Credits

SciTools was initially mainly developed by Hans Petter Langtangen
<hpl@simula.no> for his book "Python Scripting for Computational
Science" (Springer, 1st edition 2003, 3rd edition 2009). 
The Easyviz package was mainly developed by Johannes H. Ring 
<johannr@simula.no>. Johannes H. Ring has been the principal
maintainer of SciTools.

Some modules included in SciTools are written by others:

Allen B. Downey <downey@allendowney.com> wrote Lumpy.py and Gui.py
Imri Goldberg <lorgandon@gmail.com> wrote aplotter.py
Fred L. Drake, Jr. <fdrake@acm.org> wrote pprint2.py
Gael Varoquaux <gael.varoquaux@normalesup.org> wrote pyreport

Code contributors include:

Rolv E. Bredesen <rolveb@simula.no>
Joachim B. Haga <jobh@simula.no>
Mario Pernici <Mario.Pernici@mi.infn.it>
Ilmar Wilbers <ilmarw@simula.no>
Arve Knudsen <arvenk@simula.no>

-------------------------------------------------------------------------------
6. Contact

Comments, suggestions, bug fixes should be sent to

    scitools@googlegroups.com

The latest release of SciTools can be obtained from

    http://scitools.googlecode.com

while the latest Subversion revision can be obtained either anonymously 
(for non-members) by

    svn co http://scitools.googlecode.com/svn/trunk/ scitools

while SciTools members should use

    svn co https://scitools.googlecode.com/svn/trunk/ scitools --username USERNAME

See http://code.google.com/p/scitools/source/checkout for details.
